# this produces the same output as drive_map.yml but it does not rely on the additional
# vars that are available through dynamic inventory.  Instead it uses the nvme-cli
# package to obtain the ebs device name, so make sure that is installed first.

- name: get nvme device names
  ansible.builtin.set_fact:
    nvme_devices: "{{ ansible_facts.devices.keys() | map('regex_replace', '^(.*)$', '/dev/\\1') }}" #"{{ ansible_facts.devices | dict2items | json_query('[?value.model==`Amazon Elastic Block Store`].key') }}"

- name: get corresponding ebs name
  ansible.builtin.shell: nvme id-ctrl -v {{ item }} | awk -F '"' '/0000:/ {print $2}' | tr -d '.' | awk '$0 !~/\/dev/{$0="/dev/"$0};1'
  loop: "{{ nvme_devices }}"
  register: result

- name: map ebs name to nvme name
  ansible.builtin.set_fact:
    drive_map: "{{ dict(result.results | json_query('[*].[stdout, item]')) }}"

- debug:
    var: drive_map