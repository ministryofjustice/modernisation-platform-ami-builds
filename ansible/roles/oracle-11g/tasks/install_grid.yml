- name: create response files
  template:
    src: "{{ item }}.j2"
    dest: "{{ stage }}/{{ item }}"
    mode: u=rw,g=r
    owner: oracle
    group: oinstall
  loop:
    - "{{ password_response_file }}"
    - "{{ grid_response_file }}"

- name: run oracle grid install
  ansible.builtin.command:
    argv:
      - "{{ stage }}/grid/runInstaller"
      - -silent
      - -waitforcompletion
      - -ignoreSysPrereqs
      - -ignorePrereq
      - -responseFile {{ stage }}/{{ grid_response_file }}
    creates: "{{ grid_home }}/bin/sqlplus"
  become_user: oracle
  vars:
    ansible_remote_tmp: "{{ temp }}"

- name: install grid patch 18370031
  ansible.builtin.command:
    cmd: "{{ grid_home }}/OPatch/opatch apply {{ stage }}/GIPATCH_1/18370031 -silent"
  become_user: oracle
  environment: "{{ grid_env }}"

- name: run orainstRoot script
  ansible.builtin.command: "{{ oracle_inventory }}/orainstRoot.sh"

- name: run root script
  ansible.builtin.command: "{{ grid_home }}/root.sh"

- name: add shebang to config tool script # otherwise Ansible wont run it
  ansible.builtin.lineinfile:
    path: "{{ grid_home }}/cfgtoollogs/configToolAllCommands"
    regexp: "^#!/bin/sh"
    line: "#!/bin/sh"
    insertbefore: BOF
    create: yes

- name: set passwords
  ansible.builtin.command:
    cmd: "{{ grid_home }}/cfgtoollogs/configToolAllCommands RESPONSE_FILE={{ stage }}/{{ password_response_file }}"
  become_user: oracle
