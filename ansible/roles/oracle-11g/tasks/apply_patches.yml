- include_vars:
    file: patches.yml

- name: copy patches from s3 bucket
  ansible.builtin.command:
    cmd: /usr/local/bin/aws s3 cp s3://{{ s3_bucket_with_prefix }}/{{ patch_set }} .
    creates: "{{ patch_set }}"
    chdir: "{{ stage }}"

- name: unarchive patches
  ansible.builtin.unarchive:
    src: "{{ stage }}/{{ patch_set }}"
    dest: "{{ stage }}"
    owner: oracle
    group: oinstall
    mode: u=rwX,g=rX,o=rX
    remote_src: yes

- name: check TEST database not already present
  ansible.builtin.command: srvctl config database -d TEST
  register: db_result
  become_user: oracle
  environment: "{{ grid_env }}"
  failed_when: db_result.rc > 1

- name: create temporary TEST database for patching purposes
  block:
    - ansible.builtin.lineinfile:
        path: "{{ database_home }}/dbs/initTEST.ora"
        regexp: "^db_name=TEST"
        line: db_name=TEST
        create: yes
        group: oinstall
        owner: oracle

    - ansible.builtin.shell: |
        srvctl add database -d TEST -o "{{ database_home }}" -s nomount
        srvctl start database -d TEST
      become_user: oracle
      environment: "{{ grid_env }}"

  when: db_result.rc != 0

- name: apply patch {{ patches_auto }} to grid and database home
  ansible.builtin.command: "{{ grid_home }}/OPatch/opatch auto {{ patch }}/{{ item }}"
  loop: "{{ patches_auto }}"
  environment: "{{ grid_env }}"

- name: stop TEST database before patching oracle home
  ansible.builtin.command: srvctl stop database -d TEST
  become_user: oracle
  environment: "{{ db_env }}"
  register: db_stop
  failed_when: db_stop.rc > 2

- name: apply batch patches to database home
  ansible.builtin.command: "{{ database_home }}/OPatch/opatch napply {{ patch }} -id {{ patch_ids }} -silent -oh {{ database_home }}"
  vars:
    patch_ids: "{{ patches_batch | join(',') }}"
  become_user: oracle

- name: apply patch "{{ patches_single }}" to database home
  ansible.builtin.command: "{{ database_home }}/OPatch/opatch apply {{ patch }}/{{ item }} -silent -oh {{ database_home }}"
  loop: "{{ patches_single }}"
  become_user: oracle
