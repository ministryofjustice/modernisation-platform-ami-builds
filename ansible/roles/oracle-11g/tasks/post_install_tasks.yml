- name: enable selinux
  import_role:
    name: common
    tasks_from: selinux.yml
  vars:
    status: enforcing

- name: add FLASH disk group
  ansible.builtin.shell: |
    source oraenv <<< +ASM
    sqlplus -s / as sysasm <<< "create diskgroup FLASH external redundancy disk {{ disks }};"
  become_user: oracle
  environment: "{{ grid_env }}"
  vars:
    disks: "{{ oracle_asm_flash_disks | json_query('[*].label') | map('regex_replace', '(^.*$)', \"'ORCL:\\1'\") | join(',') }}"

- name: save spfile location
  ansible.builtin.shell: source oraenv <<< +ASM
    asmcmd spget > {{ temp }}/spfilelocation.txt
  become_user: oracle
  environment: "{{ grid_env }}"

- name: get list of install files to remove
  ansible.builtin.find:
    paths: "{{ stage }}"
    file_type: any
    excludes: "*.rsp"
  register: files

- name: clean up {{ stage }} directory
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ files.files }}"

- name: remove {{ oracle_tar }} from {{ artefact_dir }} directory
  ansible.builtin.file:
    path: "{{ artefact_dir }}/{{ oracle_tar }}"
    state: absent

- name: recursively change ownership of the {{ oracle_externaljob_path }} directory
  ansible.builtin.file:
    path: "{{ oracle_externaljob_path }}"
    state: directory
    recurse: yes
    mode: u=r,g=rwX,o=rx
    owner: root
    group: oinstall

- name: update run_user for the {{ oracle_externaljob_file }}
  replace:
    path: "{{ oracle_externaljob_path }}/{{ oracle_externaljob_file }}"
    regexp: "run_user = nobody"
    replace: "run_user = oracle"

- name: update run_group for the {{ oracle_externaljob_file }}
  replace:
    path: "{{ oracle_externaljob_path }}/{{ oracle_externaljob_file }}"
    regexp: "run_group = nobody"
    replace: "run_group = dba"

# typically you will only run the `deconfig` tag when creating an image, such
# that any instances launched from the image do so with oracle services not
# running, so that they can be reconfigured with the hostname of the launch instance

- name: deconfigure oracle HAS
  ansible.builtin.command: perl/bin/perl -I perl/lib -I crs/install crs/install/roothas.pl -deconfig -force
  args:
    chdir: "{{ grid_home }}"
  tags:
    - never
    - deconfig
