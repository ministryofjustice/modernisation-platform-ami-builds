---
name: Database
description: Database provisioner component.
schemaVersion: 1.0
parameters:
  - Version:
      type: string
      default: "1.0.3"
      description: Component version (update this each time the file changes)
  - Platform:
      type: string
      default: "Linux"
      description: Platform.
phases:
  - name: build
    steps:
      - name: InstallPackages
        action: ExecuteBash
        inputs:
          commands:
            - sudo yum install gcc openssl-devel bzip2-devel libffi-devel zlib-devel wget unzip screen -y
      - name: InstallPython3-9
        action: ExecuteBash
        inputs:
          commands:
            - |
              set -e
              cd /tmp

              # install python 3.9
              wget https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tgz
              tar xzf Python-3.9.6.tgz
              rm -f Python-3.9.6.tgz
              cd Python-3.9.6
              ./configure --enable-optimizations
              sudo make altinstall
      - name: InstallAndRunAnsible
        action: ExecuteBash
        inputs:
          commands:
            - |
              set -e
              cd /tmp

              # install, create, activate virtual environment
              pip3.9 install virtualenv
              mkdir /tmp/python-venv && cd "$_"
              python3.9 -m venv ansible
              source ansible/bin/activate

              # Install ansible modules in virtual env
              python3.9 -m pip install --upgrade pip
              python3.9 -m pip install ansible==6.0.0

              # Download playbook
              mkdir /tmp/database-ansible-playbook && cd "$_"
              git clone "https://github.com/ministryofjustice/modernisation-platform-ami-builds.git"
              cd modernisation-platform-ami-builds/ansible

              # Install requirements in virtual env
              python3.9 -m pip install -r requirements.txt
              ansible-galaxy role install -r requirements.yml
              ansible-galaxy collection install -r requirements.yml

              # Get required extra vars and run ansible
              INSTANCE_ID=$(curl http://instance-data/latest/meta-data/instance-id)
              PY_INTERPRETER=$(which python3.9) 
              ansible-playbook ../teams/nomis/ansible/playbooks/database-ami-provisioning.yml \
              --connection=local \
              --inventory localhost, \
              --extra-vars "instance_id=$INSTANCE_ID ansible_python_interpreter=$PY_INTERPRETER s3_bucket_with_prefix=ec2-image-builder-nomis20220314103938567000000001/oracle-11g-software" \
              --become \
              --tags "all,opatch,patch,deconfig"

              # Deactivate virtual env and cleanup
              deactivate
              rm -r /tmp/python-venv
              rm -r /tmp/database-ansible-playbook
