---
name: ${ami}_ansible
description: Install ansible roles for ${ami}
schemaVersion: 1.0
parameters:
  - Version:
      type: string
      default: 0.0.4
      description: Component version (update this each time the file changes)
  - Platform:
      type: string
      default: "Linux"
      description: Platform.
phases:
  - name: build
    steps:
      # Install ansible roles
      - name: InstallAndRunAnsible
        action: ExecuteBash
        inputs:
          commands:
            - |
              set -e
              repo="modernisation-platform-ami-builds"
              ami_tag="${ami}"

              # clone ansible roles and playbook
              ansible_dir=$(mktemp -d)
              echo "Cloning $repo into $ansible_dir using branch=${branch}"
              cd $ansible_dir
              git clone -b ${branch} "https://github.com/ministryofjustice/$repo.git"

              # install python dependencies outside of virtual env so ansible
              # can be executed remotely
              cd $ansible_dir/$repo/ansible
              python=$(grep ansible_python_interpreter group_vars/ami_$ami_tag.yml | cut -d: -f2 || true)
              [[ -z $python ]] && python=python
              echo "python=$python"
              $python -m pip install -r requirements.txt

              # activate virtual environment
              mkdir $ansible_dir/python-venv && cd "$_"
              $python -m venv ansible
              source ansible/bin/activate
              $python -m pip install --upgrade pip
              $python -m pip install ansible==6.0.0

              # install requirements in virtual env
              cd $ansible_dir/$repo/ansible
              $python -m pip install -r requirements.txt
              ansible-galaxy role install -r requirements.yml
              ansible-galaxy collection install -r requirements.yml --force

              # run ansible
              ansible-playbook site.yml \
              --connection=local \
              --inventory localhost \
              --extra-vars "target=localhost" \
              --extra-vars "@group_vars/ami_$ami_tag.yml" \
              --tags amibuild \
              --become

              # Cleanup
              deactivate
              echo "Cleaning up $ansible_dir"
              rm -rf $ansible_dir/$repo
              rm -rf $ansible_dir/python-venv
              rmdir $ansible_dir
